/* account.ui/src/app/app.component.css */
.modal-open { position: fixed; }

/*
  Originally the idea was to display the scanner over the txn form. I couldn't get that to
  work but realised on the way that the scanner needed to display higher up the window, ie. over
  the transaction list itself, so that the camera display was on view without scrolling. While
  trying to get that to work I somehow succeeded in getting the overlay so do what I wanted,
  more or less. No real idea why it works now but didn't hours and hours ago when I started
  doing it. The missing thing now is the height of the scanner 'permission' panel - it should
  be higher but setting a height for qrreadercontainer causes the transaction list to be 
  permanently obscured.
*/
#txncontainer {
  position: relative;
  left: 0px;
  top: 0px;
}

#qrreadercontainer,
#txnform {
  width: 100%;
  position: absolute;
}

#txnform {
  margin-top: 0px; 
  top: 0px
}

/*
 Tried to get the version to display just below the title in a tiny font. 
 This appears to be the way to change the meaning of the 'small' when displayed
 in the 'navbar-brand' class. 
 Nothing I tried prevented huge expanses of empty space from appearing between the title and the version
 which causes the top bar to become ridiculously high so in the end I'm forced to putting the version
 on the same line as the title.
 Things likeline-height, margin-(top,bottom), padding-(top,bottom) make no difference here
 or as part of the main '.navbar-brand'.
 Using py-0, my-0 in the class list also make no difference. Very frustrating!
 */
.navbar-brand small {
  font-size: 10px;
}

/*
  Setting -ve margin-top with z-index,opacity and background displays the scanner over the transaciton list
  which is what I want. Insanely when the scanner is displayed a block of empty space appears between it and
  the transaction form, ie. the transaction form moves down by the height of the scanner box, even though the
  scanner box is displayed way above it. It does not appear to be possible to prevent this. It shouldn't matter,
  providing it moves back up again when the scan is finished.
  SOLVED: 'position: absolute' in the sub-div style appears to fix position of the transaction form after the transaciton list
  AND allow the scanner window to appear over the transaction list!
 */
#qrreadercontainer {
  z-index: 1000000000;
  opacity: 1;
  margin-top: -350px; 
  background: white;
}

/*
   Some real magic!! Somehow this ADDs some color to the bootstrap striped table effect.
   The bootstrap class is applied to each td in a tr using something like
   .table-striped > tbody > tr:nth-child(odd) > td {
      background-color: #f9f9f9;
   }
   and the magic below applies the extra color to each td which is in a tr with the txn-locked class
   regardless of the nth-child thing (no idea where that comes from!).
   The real magic is that the rows are still striped, ie. locked rows have the color given below but
   odd rows are a bit darker than even rows!

   Turns out there is a bootstrap way to do what I wanted without needing to 
   create my own style class. The stripes are actually intended 'semi-transparent',
   see: https://getbootstrap.com/docs/5.2/content/tables/#striped-rows
 */
 table.table.table-striped tr.txn-locked td {
  background-color:#f3eefd;
}


/* Couldn't figure out if there was a nicer way to apply the right to td and th with the account-amount class.
   .account-amount td,th   - didn't work
   td,th account-amount    - didn't work
   account-amount          - this worked but applied to everything
   td.account-amount, th.account-amount - works but is very ugly
 */
td.account-amount, th.account-amount
{
   text-align: right;
   border-bottom-width: 0;
   white-space: nowrap;
}
td.account-edit, th.account-edit
{
   width:0px;
   white-space: nowrap;
   padding: 0px !important;

   margin: 0px;
}
/*
   Text colour does not change when '!important' is omitted
 */
.account-negbalance
{
   color: red !important;
}
.account-negamount
{
   color: green !important;
}
/* Trying to reduce the wasted space between the rows. Some was due to padding on the update button and icon
   but most is due to the bootstrap table css and nowhere is it documented how to remove the padding.
   The only thing that has made any difference is the padding/margin settings, and they only work if
   !important is used. Why on earth don't they realise that not everyone wants to waste very valuable screen
   space by filling it with useless whitespace??
   
   The 'btn' class is modified in the .scss file to remove the excessive line-height, padding and margin.
   I couldn't figure out how to do the same for the 'table' class which is using. The bootstrap docs
   refer to variables being used to set properties but I failed to find anything which made an sense
   regarding how to override the variable - it seems the only way to do it is to modify the original values or
   to add a custom file to bootstrap directory - which seems like a terrible idea.
   So this will have to do for now as it appears to do what I want, ie. put the rows closer together.
 */
td, tr {
  padding-top: 0 !important;
  margin-top: 0 !important;
  padding-bottom: 0 !important;
  margin-bottom: 0 !important;
  font-size: 10pt !important;

  border-bottom-width: 0 !important;
}

td.nowrap  {
   white-space: nowrap;
}

.remove-caret::after {
    display: none !important;
}
