spring.application.name=accountapi

# TODO Find a way to specify the installation specific path at runtime, ie. not in the jar/war
spring.datasource.url=jdbc:ucanaccess://C:/Development/accountDB/acc2003_TEST.mdb

#spring.datasource.url=jdbc:ucanaccess://C:/Development/workspace/accountrest/acc2003_TEST.mdb
#spring.datasource.url=jdbc:ucanaccess://${DBPATH}
#;showSchema=true;memory=false
spring.datasource.username=Admin
spring.datasource.password=
spring.datasource.driver-class-name=net.ucanaccess.jdbc.UcanaccessDriver

spring.jpa.properties.hibernate.dialect=net.ucanaccess.hibernate.dialect.UCanAccessDialect

#spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.EJB3NamingStrategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Try to stop SqlExceptionHelper   : Cannot load view Visa BCC(EUR) : user lacks privilege or object not found: FROM
# there is no reason whatsoever for it to be trying to do anything with the stored query called 'Visa BCC(EUR)' 
spring.jpa.properties.hibernate.hbm2ddl.auto=none
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

# bunch of values from https://medium.com/@tobias.strg/accessing-ms-access-with-hibernate-5-and-spring-boot-1b58f26ebb7d

spring.jpa.hibernate.ddl-auto=none 
spring.jpa.generate-ddl=false
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=false

# HikariPool-1 - Connection net.ucanaccess.jdbc.UcanaccessConnection@4e83a42f[C:\\Development\\accountDB\\acc2003_TEST.mdb] marked as broken because of SQLSTATE(08503), ErrorCode(-1353)
# after period of inactivity. Need to somehow tell Hikari to reopen the connection or to keep it alive
# Needless to say I go these from Google and have no clue what they do or whether they will help!!
spring.datasource.test-while-idle=true
spring.datasource.validation-query=SELECT 1;
spring.datasource.time-between-eviction-runs-millis=60000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.validationTimeout=300000

spring.datasource.remove-abandoned=true
spring.datasource.remove-abandoned-timeout=60

spring.datasource.hikari.connectionTimeout=30000

# Still get the connection closed exception. Try reducing
# values to see if forces hikari to close connections itself
# Documentation: 
# https://www.baeldung.com/spring-boot-hikari
# https://github.com/brettwooldridge/HikariCP?tab=readme-ov-file#gear-configuration-knobs-baby
# and then reopen them as needed: 300000=5mins
#spring.datasource.hikari.idleTimeout=600000
#spring.datasource.hikari.maxLifetime=1800000
spring.datasource.hikari.idleTimeout=150000
spring.datasource.hikari.maxLifetime=300000
spring.datasource.hikari.keepaliveTime=150000
